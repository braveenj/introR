library(usethis)
usethis::use_course("rstd.io/wtf-debugging")
usethis::use_course("rstd.io/wtf-debugging", destdir="~/rs2019/")
library(dplyr)
test <- tibble(a = lubridate::today() + runif(5) * 30, b = c(1:4, ""), c = c(runif(4), ""), d = c(sample(letters, 4, replace = TRUE), ""))
test
test %>% na_if("")
traceback()
q()
489*20
489 * 20
(32*8) + (1000/5.2)
log(7)
log10(7)
550^2
sqrt(302500)
a <- 8
a
b <- 22
b
ls()
a + b
a * b
1 /b
a^b
months <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
months
months <- c(1:12)
months
monthsC <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
monthsC
year <- data.frame(months, monthsC)
year
numdays <- c(31,29,31,30,31,30,31,31,30,31,30,31)
year <- data.frame(months, monthsC, numdays)
year
is.matrix(year)
jackhighC <- c(-2, 0, 6, 11, 17, 23, 28, 27, 22, 14, 4, -2)
jacklowC <- c(-15, -13, -8, -4, 0, 3, 5, 4, 0, -4, -9, -14)
jacktemp <- data.frame(jackhighC, jacklowC)
jacktemp
jacktemp <- data.frame(year, jacktemp)
jacktemp
(5*9/5)+32
jacktemp$jackhighF <- (jacktemp$jackhighC * 9/5) + 32
head(jacktemp)
jacktemp$jacklowF <- (jacktemp$jacklowC * 9/5) + 32
head(jacktemp)
jacktemp2 <- jacktemp[,c(1,2,4:7,3)]
head(jacktemp2)
write.table(jacktemp, "jacktemp.txt", col.names=TRUE, quote=FALSE, sep='\t')
list.files()
list.files("jack*")
getwd()
getwd()
write.table(jacktemp, "jacktemp.txt", col.names=TRUE, quote=FALSE, sep='\t', row.names=FALSE)
head(jacktemp)
jacktemp$jacklowF <- NULL
head(jacktemp)
getwd()
setwd("~/Dropbox/Github/caspeR/day1/")
list.files()
list.files()
census <- read.csv("census.csv", header=TRUE)
head(census)
tail(census)
dim(census)
census$Location
names(census)
census[20:25,]
census[20:25,2]
census
census2 <- census[1:52,]
dim(census2)
census2$Location
head(census2)
mean(census2$Estimate)
mean(census2$Estimate)/1000000
subset(census2, Estimate == 6274807)
max(census2$Estimate)
min(census2$Estimate)
subset(census2, Estimate == 39148760)
subset(census2, Estimate == 581836)
subset(census2, Location == "Rhode Island")
install.packages("vegan")
library(vegan)
sessionInfo()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
library(DESeq2)
library(devtools)
devtools::install_github("dkahle/ggmap")
?plot
?mean
?cor.test
data(mtcars)
?mtcars
head(mtcars)
options(width=150)
head(mtcars)
min(mtcars$mpg)
subset(mtcars, mpg == 10.4)
max(mtcars$mpg)
subset(mtcars, mpg == 33.9)
mean(mtcars$mpg)
subset(mtcars, mpg < 21 & mpg > 19)
var(mtcars$mpg)
sd(mtcars$mpg)
summary(mtcars)
options(width=120)
summary(mtcars)
data(presidents)
presidents
summary(presidents)
max(presidents)
max(presidents[,1:4])
dim(presidents)
is.data.frame(presidents)
p <- as.data.frame(presidents)
max(p)
max(p[,1:4])
rownames(p) <- NULL
head(p)
rnorm(10, 0, 1)
rnorm(10, 55, 2)
rnorm(10, 55, 2)
norm10 <- rnorm(10, 5, 2)
norm100 <- rnorm(100, 5, 2)
norm1k <- rnorm(1000, 5, 2)
norm100k <- rnorm(100000, 5, 2)
library(ggplot2)
ggplot() + geom_histogram(aes(x=norm10))
ggplot() + geom_histogram(aes(x=norm100))
ggplot() + geom_histogram(aes(x=norm100))
hist(norm100)
ggplot() + geom_histogram(aes(x=norm1000))
ggplot() + geom_histogram(aes(x=norm1k))
ggplot() + geom_histogram(aes(x=norm100k))
?runif
unif100 <- runif(100)
unif1m <- runif(1000000)
ggplot() + geom_histogram(aes(x=unif100))
ggplot() + geom_histogram(aes(x=unif1m))
unif100k <- runif(100000)
ggplot() + geom_histogram(aes(x=unif100k))
sample(1:25, 5, replace=TRUE)
sample(1:25, 5, replace=TRUE)
sample(1:25, 5, replace=TRUE)
sample(1:25, 5, replace=FALSE)
sample(1:25, 5, replace=FALSE)
sample(1:25, 5, replace=FALSE)
sample(1:25, 5, replace=FALSE)
sample(1:25, 5, replace=FALSE)
sample(1:25, 5, replace=FALSE)
sample(1:25, 5, replace=FALSE)
sample(1:25, 5, replace=FALSE)
sample(1:25, 5, replace=FALSE)
sample(1:25, 5, replace=FALSE)
sample(1:25, 5, replace=FALSE)
sample(1:25, 5, replace=FALSE)
sample(1:25, 26, replace=FALSE)
sed.seed(379)
set.seed(379)
sample(1:25, 5, replace=FALSE)
sample(1:25, 5, replace=FALSE)
set.seed(379)
sample(1:25, 5, replace=FALSE)
sample(c("AA", "Aa", "aa"), 200, replace=TRUE)
pop <- sample(c("AA", "Aa", "aa"), 200, replace=TRUE)
pop
sum(pop == "AA")
sum(pop == "Aa")
sum(pop == "aa")
pop2 <- sample(c("AA", "Aa", "aA", "aa"), 200, replace=TRUE)
sum(pop2 == "AA")
sum(pop2 == "Aa")
sum(pop2 == "aA")
sum(pop2 == "aa")
data(airquality)
head(airquality)
dim(airquality)
airquality[sample(nrow(airquality), 50, replace=TRUE),]
airquality
75/200
75/200
pop
sum(pop == "AA")
sum(pop == "Aa")
sum(pop == 'aa')
(sum(pop == "AA")*2 + sum(pop == "Aa"))
(sum(pop == "AA")*2 + sum(pop == "Aa"))/400
(sum(pop == "aa")*2 + sum(pop == "Aa"))/400
0.4825+0.5175
pop2
sum(pop2 == "AA")
sum(pop2 == "Aa")
sum(pop2 == "aA")
sum(pop2 == "aa")
53+49/400
(53+49)/400
((53*2)+49)/400
((49*2)+49)/400
(53*2)+98/400
((53*2)+98)/400
((49*2)+98)/400
sample(c("HEADS", "TAILS"), 1000, replace=TRUE)
df <- sample(c("HEADS", "TAILS"), 1000, replace=TRUE)
sum(df == "HEADS")
sum(df == "TAILS")
for (i in 1:20){}
for (i in 1:20){ print(i)}
for (i in 1:20){ print(paste("The number is: ", i, sep="")}
for (i in 1:20){ print(paste("The number is: ", i, sep=""))}
for (i in 1:20){ print(paste("The number is: ", i))}
for (i in 1:20){ print(paste("The number is:", i, sep=""))}
for (i in 1:5){ print(paste("Square of the number is: ", i^2, sep=""))}
sample(0:10, 100, replace=TRUE)
replicate(4, sample(0:10, 200, replace=TRUE))
scores <- replicate(4, sample(0:10, 200, replace=TRUE))
head(scores)
dim(scores)
hist(scores[,1], xlab="Question 1")
par(mfrow=c(2,2))
for (i in 1:4){
x <- scores[,i]
hist(x,
main=paste("Question ", i),
xlab="Scores",
xlim=c(0, 10))
}
par(mfrow=c(2,2), mar=c(5,4,4,2), oma=c(1,1,1,1))
for (i in 1:4){
x <- scores[,i]
hist(x,
main=paste("Question ", i),
xlab="Scores",
xlim=c(0, 10))
}
par(mfrow=c(2,2), mar=c(5,4,4,2), oma=c(1,1,1,1))
pdf("scores_hist.pdf", width=10, height=10)
for (i in 1:4){
x <- scores[,i]
hist(x,
main=paste("Question ", i),
xlab="Scores",
xlim=c(0, 10))
}
dev.off()
getwd()
pdf("scores_hist.pdf", width=10, height=10)
par(mfrow=c(2,2), mar=c(5,4,4,2), oma=c(1,1,1,1))
for (i in 1:4){
x <- scores[,i]
hist(x,
main=paste("Question ", i),
xlab="Scores",
xlim=c(0, 10))
}
dev.off()
head(s)
head(state.x77)
pdf("state.x77.pdf" width=8, height=5)
par(mfrow=c(1,2))
for (i in 1:2){
x <- state.x77[,i]
hist(x)
}
dev.off()
pdf("state.x77.pdf")
par(mfrow=c(1,2))
for (i in 1:2){
x <- state.x77[,i]
hist(x)
}
dev.off()
pdf("state.x77.pdf")
par(mfrow=c(1,2))
for (i in 1:2){
x <- state.x77[,i]
hist(x)
}
dev.off()
state.x77
head(state.x77)
s <- state.x77[,c(1,8)]
head(s)
